import org.gradle.api.tasks.compile.JavaCompile

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'com.palominolabs.gradle.task:gradle-git-clone-task:0.0.3'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

version = modVersion
group = modGroup
archivesBaseName = modBaseName

def getGitRef() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Throwable e) {
        return "unknown"
    }
}

if (System.getenv("PROMOTED_NUMBER") != null)
    buildNumber = "${System.getenv("PROMOTED_NUMBER")}"
else if (System.getenv("BUILD_NUMBER") != null)
    buildNumber = "${System.getenv("BUILD_NUMBER")}"
else
    buildNumber = "+" + getGitRef()

minecraft {
    version = "${minecraftVersion}-${forge_version}"
    runDir = "run"
    mappings = mcp_mappings
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replace "@VERSION@", project.version
    replace "@BUILD@", project.buildNumber
}

repositories {
    mavenCentral()
    maven {
        name = "OpenComputers"
        url = "https://maven.cil.li/"
    }
    maven {
        url "https://maven.amadornes.com/" // for MCMultiPart
    }
    maven { url = "https://minecraft.curseforge.com/api/maven/" } // curseForge
}

configurations {
    extraLibs
    provided.extendsFrom extraLibs
}

dependencies {
    deobfCompile "li.cil.oc:OpenComputers:${openComputersVersion}"

    compileOnly "li.cil.manual:RTFM:${rtfmVersion}"

    deobfCompile "MCMultiPart2:MCMultiPart:${MCMPVersion}"

    provided fileTree(include: ['*.jar'], dir: 'libs')

    //extraLibs files("libs/commons0815/Commons0815-${commons_version}-dev.jar")
    provided "commons0815:Commons0815:1.12.2:${commons_version}"

    compileOnly group: 'techguns', name: 'Techguns', version: '1.12.2', classifier: '2.0.2.0_pre3.1', ext: 'jar'

    // all those just for the case block =>
    provided ("appeng:appliedenergistics2:${ae2Version}:api") {
        transitive = false
    }

    provided ("mrtjp:ProjectRed:${projredVersion}:Base") {
        exclude module: "NotEnoughItems"
        exclude module: "CodeChickenLib"
        exclude module: "jei_1.12"
        exclude module: "ForgeMultipart"
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand 'version':project.version + "-" + project.ext.buildNumber, 'mcversion':project.minecraftVersion
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

task flushWiki(type: Delete) {
    delete "src/main/resources/assets/ocdevices/doc"
}

task syncGitWiki(type: com.palominolabs.gradle.task.git.clone.GitCloneTask) {
    dir = file("src/main/resources/assets/ocdevices/doc")
    uri = 'https://github.com/ben-mkiv/OCDevices.wiki.git'
    treeish = "origin/master"
    forceFetch = true
    reset = true
}

jar {
    classifier = project.buildNumber

    manifest {
        attributes([
                "Maven-Artifact":"${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp': System.currentTimeMillis()
        ])
    }
}

syncGitWiki.dependsOn(flushWiki)
build.dependsOn(syncGitWiki)
